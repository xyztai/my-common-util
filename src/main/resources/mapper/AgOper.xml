<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.my.mapper.DataCalcMapper">
    <resultMap id="queryOperResultMap" type="net.my.pojo.AgOper">
        <id column="time" property="time" />
        <result column="name" property="name" />
        <result column="oper_dir" property="operDir" />
        <result column="buy_oper" property="buyOper" />
        <result column="sell_oper" property="sellOper" />
    </resultMap>

    <resultMap id="queryParaMap" type="net.my.pojo.AgParaBO">
        <id column="id" property="id" />
        <result column="type" property="type" />
        <result column="name" property="name" />
        <result column="s_ratio" property="sRatio" />
        <result column="b_ratio" property="bRatio" />
    </resultMap>

    <resultMap id="queryCPMap" type="net.my.pojo.AgClosePriceBO">
        <id column="id" property="id" />
        <id column="time" property="time" />
        <result column="type" property="type" />
        <result column="name" property="name" />
        <result column="close_price" property="closePrice" />
    </resultMap>

    <resultMap id="queryDataCalcMap" type="net.my.pojo.AgDataCalcBO">
        <id column="id" property="id" />
        <id column="time" property="time" />
        <result column="type" property="type" />
        <result column="name" property="name" />
        <result column="expma_5" property="expma5" />
        <result column="expma_37" property="expma37" />
        <result column="s_ratio_para" property="sRatioPara" />
        <result column="s_ratio" property="sRatio" />
        <result column="s_ratio_pre" property="sRatioPre" />
        <result column="b_ratio_para" property="bRatioPara" />
        <result column="b_ratio" property="bRatio" />
        <result column="b_ratio_pre" property="bRatioPre" />
    </resultMap>

    <resultMap id="queryDataCntMap" type="net.my.pojo.AgDataCntBO">
        <id column="time" property="time" />
        <result column="cnt_cp" property="cntCp" />
        <result column="cnt_calc" property="cntCalc" />
        <result column="cnt_gap" property="cntGap" />
        <result column="names_miss" property="namesMiss" />
    </resultMap>

    <select id="queryPara" resultMap="queryParaMap">
        select t1.id, t1.type, tt.name, t1.s_ratio, t1.b_ratio, tt.id type_id from t_para t1, t_type tt where t1.`type` = tt.`type` order by type_id
    </select>

    <update id="updatePara" parameterType="net.my.pojo.AgParaBO">
        update t_para
           set s_ratio = #{sRatio}
               , b_ratio = #{bRatio}
        where type = #{type}
    </update>

    <select id="queryMaxPara" resultMap="queryParaMap">
<![CDATA[
        select t2.type, max(t2.s_ratio) s_ratio, max(t2.b_ratio) b_ratio
        from (
                 select t1.type
                      , t1.time
                      , round(t1.expma_5/t1.expma_37, 4) s_ratio
                      , row_number() over (partition by t1.type order by round(t1.expma_5/t1.expma_37, 4) desc, t1.time desc) s_rn
	                  , round(t1.expma_37/t1.expma_5, 4) b_ratio
                      , row_number() over (partition by t1.type order by round(t1.expma_37/t1.expma_5, 4) desc, t1.time desc) b_rn
                      , cnt
                 from (
                        select
                               row_number() over (partition by t0.type order by t0.time desc) time_rn
                               , count(1) over (partition by t0.type) cnt, t0.*
                        from t_data_calc t0
                       ) t1
                 where t1.time_rn <= 250
             ) t2
        where t2.s_rn = round(cnt/30) + 1 or t2.b_rn = round(cnt/30) + 1
        group by t2.type
]]>
    </select>

    <delete id="deleteCP">
        delete from t_raw_close_price where time = #{time}
    </delete>

    <delete id="deleteOneCP">
        delete from t_raw_close_price where time = #{time} and type = #{type}
    </delete>

    <delete id="deleteDataCalc">
        delete from t_data_calc where time = #{time} and can_del = 1
    </delete>

    <delete id="deleteDataCalcAfter">
<![CDATA[
        delete from t_data_calc where time >= #{time} and can_del = 1
]]>
    </delete>

    <insert id="insertCP" parameterType="net.my.pojo.AgClosePriceBO">
        insert into t_raw_close_price(time, type, close_price) values (#{time}, #{type}, #{closePrice})
    </insert>

    <select id="getMaxTime" resultType="string">
        select max(time) from t_raw_close_price
    </select>

    <select id="getExpectCP" resultMap="queryCPMap">
<![CDATA[
        select t12.id
             , t11.time
             , t11.type
             , t12.name
             , t11.close_price * (${change} * 0.01 + 1) close_price
        from (
                 select
                    #{time} time
                    , t1.type
                    , t1.close_price
                    , row_number() over (partition by t1.type order by t1.time desc) rn
                 from t_raw_close_price t1
                 where t1.time < #{time}
             ) t11, t_type t12
        where t11.rn = 1
        and t11.type = t12.type
]]>
    </select>

    <select id="queryCP" resultMap="queryCPMap">
        select t2.id, t1.time, t1.type, t2.name, t1.close_price
        from t_raw_close_price t1, t_type t2
        where t1.time = #{time}
        and t1.type = t2.type
        order by 1
    </select>

    <select id="queryDataCalc" resultMap="queryDataCalcMap">
<![CDATA[
        select t.id, t.time, t.type, t.name, t.expma_5, t.expma_37
             , t.s_ratio_para, t.s_ratio, t.s_ratio_pre
             , t.b_ratio_para, t.b_ratio, t.b_ratio_pre
        from (
                 select t2.id, t1.time, t1.type, t2.name, t1.expma_5, t1.expma_37
                      , t3.s_ratio s_ratio_para
                      , round(t1.expma_5/t1.expma_37, 4) s_ratio
                      , lead(round(t1.expma_5/t1.expma_37, 4)) over (partition by t1.`type` order by t1.`time` desc) s_ratio_pre
                      , t3.b_ratio b_ratio_para
                      , round(t1.expma_37/t1.expma_5, 4) b_ratio
                      , lead(round(t1.expma_37/t1.expma_5, 4)) over (partition by t1.`type` order by t1.`time` desc) b_ratio_pre
               , row_number() over (partition by t1.`type` order by t1.`time` desc) rn_time
                 from t_data_calc t1, t_type t2, t_para t3
                 where t1.time <= #{time}
                   and t1.type = t2.type
                   and t1.`type` = t3.`type`
             ) t
        where t.rn_time = 1
          and t.time = #{time}
        order by 1
]]>
    </select>

    <select id="queryCalcTimes" resultType="int">
        select count(distinct t1.time)
        from t_raw_close_price t1
        where not exists (select 1 from t_data_calc t2 where t1.`time` = t2.`time`)
    </select>

    <select id="getUnCalcTimes" resultType="string">
        select DISTINCT t1.time
        from t_raw_close_price t1
        where not exists(select 1 from t_data_calc t2 where t1.`time` = t2.`time` )
        order by 1
    </select>

    <insert id="insertDataCalc" parameterType="string">
<![CDATA[
    insert into t_data_calc(time, type, expma_5, expma_37)
    select
        t11.time_max time
         , t11.type
         , t11.clac_expma_5 expma_5
         , t11.clac_expma_37 expma_37
    from
        (
            select
                t.type
                 , round((t.close_price - t3.`expma_5`)*2.0/(5.0+1) + t3.`expma_5`, 2) clac_expma_5
                 , round((t.close_price - t3.`expma_37`)*2.0/(37.0+1) + t3.`expma_37`, 2) clac_expma_37
                 , row_number() over (partition by t.`type` order by t.`time` desc) rn_c
                 , max(t.time) over () time_max
                 , max(t3.time) over () time_clac_max
                 , t3.`expma_5`
                 , t3.`expma_37`
                 , t.time
            from t_raw_close_price t,
                 (select t2.time, t2.type, t2.`expma_5`, t2.`expma_37`, row_number() over (partition by t2.type order by t2.time desc) rn from t_data_calc t2 where t2.time <= (select max(t.time) from t_data_calc t where t.`time` < #{time} )) t3
            where t.time <= #{time} -- (select min(t.time) from t_raw_close_price t where t.time > (select max(t.time) time from t_data_calc t))
            and t.type = t3.type
            and t3.rn = 1
        ) t11
    where t11.rn_c = 1
      and t11.time  = t11.time_max
      and not EXISTS (select 1 from t_data_calc tdc where tdc.`time` = t11.time_max and tdc.`type` = t11.type)
]]>
    </insert>

    <select id="queryHardOper" resultMap="queryOperResultMap">
<![CDATA[
    select
        t11.`time`
         , case when t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_500 then 'buy' else 'sell' end as `oper_dir`
         , case when t11.b_ratio_ans >= t11.b_ratio_ans_max then t11.b_ratio_ans else t11.s_ratio_ans end ratio_c
         , t13.name
         -- , t11.b_ratio_ans, t12.b_ratio_500
         , case when t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_5000 then '如果跌或者小涨涨幅<1%,则 buy 5000'
                when t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_3000 then '如果跌或者小涨涨幅<1%,则 buy 3000'
                when t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_2000 then '如果跌或者小涨涨幅<1%,则 buy 2000'
                when t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_1000 then '如果跌或者小涨涨幅<1%,则 buy 1000'
                when t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_500 then '如果跌或者小涨涨幅<1%,则 buy 500'
                else null
        end as `buy_oper`
        -- , abs(t11.s_ratio_ans - 1), s_ratio_1_in_4_start
        , case when t11.s_ratio_ans >= t11.s_ratio_ans_max and t11.s_ratio_ans - 1 >= s_ratio_1_in_1 then '如果涨或者小跌跌幅<1%,则 sell 全部'
              when t11.s_ratio_ans >= t11.s_ratio_ans_max and t11.s_ratio_ans - 1 >= s_ratio_1_in_2 then '如果涨或者小跌跌幅<1%,则 sell 二分之一'
              when t11.s_ratio_ans >= t11.s_ratio_ans_max and t11.s_ratio_ans - 1 >= s_ratio_1_in_3 then '如果涨或者小跌跌幅<1%,则 sell 三分之一'
              when t11.s_ratio_ans >= t11.s_ratio_ans_max and t11.s_ratio_ans - 1 >= s_ratio_1_in_4 then '如果涨或者小跌跌幅<1%,则 sell 四分之一'
              else null
        end as `sell_oper`
    from
        (
            select
                t1.`time`
                 , t1.`type`
                 , round(t1.`expma_5`/t1.`expma_37`, 5) s_ratio_ans
                 , round(t1.`expma_37`/t1.`expma_5`, 5) b_ratio_ans
                 , max(round(t1.`expma_5`/t1.`expma_37`, 5)) over (partition by t1.`type` order by t1.`time`) s_ratio_ans_max
                 , max(round(t1.`expma_37`/t1.`expma_5`, 5)) over (partition by t1.`type` order by t1.`time`) b_ratio_ans_max
            from (
                    select t.`time` , t.`type` , t.expma_5 , t.expma_37 , row_number() over (partition by t.`type` order by t.`time` desc) time_rn
                    from t_data_calc t
                 ) t1
            where t1.time_rn <= 22
        ) t11,
        (
            select
                t2.type
                 , 0.7*(t2.b_ratio-1) b_ratio_500
                 , 0.9*(t2.b_ratio-1) b_ratio_1000
                 , (t2.b_ratio-1) b_ratio_2000
                 , 1.1*(t2.b_ratio-1) b_ratio_3000
                 , 1.3*(t2.b_ratio-1) b_ratio_5000
                 , 0 s_ratio_1_in_4
                 , 0.3*(t2.s_ratio-1) s_ratio_1_in_3
                 , 0.7*(t2.s_ratio-1) s_ratio_1_in_2
                 , 1*(t2.s_ratio-1) s_ratio_1_in_1
            from t_para t2
        ) t12,
        (
            select *
            from t_type t3
        ) t13
    where t11.type = t12.type
      and t11.type = t13.type
      and ((t11.b_ratio_ans >= t11.b_ratio_ans_max and t11.b_ratio_ans - 1 >= b_ratio_500) or (t11.s_ratio_ans >= t11.s_ratio_ans_max and t11.s_ratio_ans - 1 >= s_ratio_1_in_4))
    order by 1 desc, 2, 3 desc
    limit 200
]]>
    </select>

    <select id="querySimpleOper" resultMap="queryOperResultMap">
<![CDATA[
        select
            t11.`time`
             , case when t11.b_ratio_ans - 1 >= b_ratio_500 then 'buy' else 'sell' end as `oper_dir`
             , case when t11.b_ratio_ans - 1 >= b_ratio_500 then t11.b_ratio_ans else t11.s_ratio_ans end ratio_c
             , t13.name
             -- , t11.b_ratio_ans, t12.b_ratio_500
             , case when t11.b_ratio_ans - 1 >= b_ratio_5000 then '如果跌或者小涨涨幅<1%,则 buy 5000'
                    when t11.b_ratio_ans - 1 >= b_ratio_3000 then '如果跌或者小涨涨幅<1%,则 buy 3000'
                    when t11.b_ratio_ans - 1 >= b_ratio_2000 then '如果跌或者小涨涨幅<1%,则 buy 2000'
                    when t11.b_ratio_ans - 1 >= b_ratio_1000 then '如果跌或者小涨涨幅<1%,则 buy 1000'
                    when t11.b_ratio_ans - 1 >= b_ratio_500 then '如果跌或者小涨涨幅<1%,则 buy 500'
                    else null
            end as `buy_oper`
             -- , abs(t11.s_ratio_ans - 1), s_ratio_1_in_4_start
             , case when t11.s_ratio_ans - 1 >= s_ratio_1_in_1 then '如果涨或者小跌跌幅<1%,则 sell 全部'
                    when t11.s_ratio_ans - 1 >= s_ratio_1_in_2 then '如果涨或者小跌跌幅<1%,则 sell 二分之一'
                    when t11.s_ratio_ans - 1 >= s_ratio_1_in_3 then '如果涨或者小跌跌幅<1%,则 sell 三分之一'
                    when t11.s_ratio_ans - 1 >= s_ratio_1_in_4 then '如果涨或者小跌跌幅<1%,则 sell 四分之一'
                    else null
            end as `sell_oper`
        from
            (
                select
                    t1.`time`
                     , t1.`type`
                     , round(t1.`expma_5`/t1.`expma_37`, 5) s_ratio_ans
                     , round(t1.`expma_37`/t1.`expma_5`, 5) b_ratio_ans
                from t_data_calc t1
            ) t11,
            (
                select
                    t2.type
                     , 0.7*(t2.b_ratio-1) b_ratio_500
                     , 0.9*(t2.b_ratio-1) b_ratio_1000
                     , (t2.b_ratio-1) b_ratio_2000
                     , 1.1*(t2.b_ratio-1) b_ratio_3000
                     , 1.3*(t2.b_ratio-1) b_ratio_5000
                     , -0.01 s_ratio_1_in_4
                     , 0.3*(t2.s_ratio-1) s_ratio_1_in_3
                     , 0.7*(t2.s_ratio-1) s_ratio_1_in_2
                     , 1*(t2.s_ratio-1) s_ratio_1_in_1
                from t_para t2
            ) t12,
            (
                select *
                from t_type t3
            ) t13
        where t11.type = t12.type
          and t11.type = t13.type
          and ((t11.b_ratio_ans - 1 >= b_ratio_500) or (t11.s_ratio_ans - 1 >= s_ratio_1_in_4))
        order by 1 desc, 2, 3 desc
        limit 200
]]>
    </select>

    <select id="queryDataCnt" resultMap="queryDataCntMap">
<![CDATA[
        select
            t11.time
             , count(time_cp) cnt_cp
             , count(time_calc) cnt_calc
             , count(time_calc) - count(time_cp) cnt_gap
             , group_concat(case when time_cp is null then name else null end separator ', ') as names_miss
        from (
                 select t1.time, tt.name, t.time time_cp, tc.time time_calc
                 from t_type tt
                 join (select distinct time from t_raw_close_price) t1
                 left join t_raw_close_price t
                        on tt.`type` = t.`type`
                       and t1.`time` = t.`time`
                 left join t_data_calc tc
                        on tt.`type` = tc.`type`
                       and t1.`time` = tc.`time`
             ) t11
        group by t11.time
        order by 1 desc
        limit 22
]]>
    </select>
</mapper>